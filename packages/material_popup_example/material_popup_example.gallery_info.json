[{"displayName":"Material Popup","group":null,"docs":[{"docType":"DocType.dartDocInfo","name":"MaterialPopupComponent","deprecated":false,"deprecatedMessage":null,"selector":"material-popup","exportAs":null,"path":"angular_components/lib/material_popup/material_popup.dart","comment":"<p>A popup component with material design look-and-feel.</p>\n<p>Caveats:</p>\n<ul>\n<li>Popups closing and opening are automatically delayed to add animations</li>\n<li>Take advantage of enforceSpaceConstraints defined in\n<code>PopupInterface</code>.</li>\n</ul>\n<p>This is useful if content size is such that adds scroll to the page.</p>\n<ul>\n<li>If the contents change and need to readjust position use\n<code>trackLayoutChanges</code> which is also defined in <code>PopupInterface</code>.</li>\n</ul>\n<p>Material popup also supports deferred/lazy-loaded content.</p>\n<p>This component publishes itself as a <code>DropdownHandle</code>, so its children may\ncontrol its visibility by injecting it:</p>\n<pre><code class=\"language-Dart\">class MyComponent {\n  final DropdownHandle _dropdownHandle;\n\n  MyComponent(this._dropdownHandle);\n\n  void onSomethingThatShouldCloseTheDropdown() {\n    _dropdownHandle.close();\n  }\n}\n</code></pre>\n","inputs":[{"annotation":"Input","name":"ariaLabel","bindingAlias":null,"type":"String*","comment":"<p>The label to be used for assistive technologies.</p>\n<p>If <code>role</code> is \"dialog\" and this is set, screenreaders will read this label\nwhen focus first enters the popup.</p>\n","classPath":"angular_components/lib/material_popup/material_popup.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"autoDismiss","bindingAlias":null,"type":"bool*","comment":"<p>Sets whether the popup should dismiss (close) itself on document press.</p>\n","classPath":"angular_components/lib/src/laminate/popup/popup_interface.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"autoDismissBlockers","bindingAlias":null,"type":"List<Element*>*","comment":"<p>Page elements that do not auto-dismiss the popup in addition to the popup\nup source element.</p>\n","classPath":"angular_components/lib/material_popup/material_popup.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"constrainToViewport","bindingAlias":null,"type":"bool*","comment":"<p>Sets whether the popup should be constrained to the viewport.</p>\n<p>If this is true, then the popup's positioned will be clamped to always be\nwithin the viewport instead of moving off-screen.</p>\n","classPath":"angular_components/lib/src/laminate/popup/popup_interface.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"enforceSpaceConstraints","bindingAlias":null,"type":"bool*","comment":"<p>Sets whether the popup should automatically reposition itself based on\nspace available relative to the viewport.</p>\n","classPath":"angular_components/lib/src/laminate/popup/popup_interface.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"hasBox","bindingAlias":null,"type":"bool*","comment":"<p>Whether the popup panel has an enclosing box that wraps the content.</p>\n<p>This gives the panel a shadow and background color. When it's off, no\nanimation delayed is applied.</p>\n","classPath":"angular_components/lib/material_popup/material_popup.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"inkBackground","bindingAlias":"ink","type":"bool*","comment":"<p>Sets the background color of the popup to be ink (<code>$mat-grey-700</code>).</p>\n","classPath":"angular_components/lib/material_popup/material_popup.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"matchMinSourceWidth","bindingAlias":null,"type":"bool*","comment":"<p>Sets whether popup should set a minimum width to the width of <code>source</code>.</p>\n","classPath":"angular_components/lib/src/laminate/popup/popup_interface.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"offsetX","bindingAlias":null,"type":"int*","comment":"<p>Sets the x-offset to where the popup will be positioned ultimately.</p>\n","classPath":"angular_components/lib/src/laminate/popup/popup_interface.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"offsetY","bindingAlias":null,"type":"int*","comment":"<p>Sets the y-offset to where the popup will be positioned ultimately.</p>\n","classPath":"angular_components/lib/src/laminate/popup/popup_interface.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"popupSizeProvider","bindingAlias":null,"type":"PopupSizeProvider*","comment":"<p>Sets a provider for the popup size.</p>\n<p>Overrides the injected PopupSizeProvider.</p>\n","classPath":"angular_components/lib/material_popup/material_popup.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"preferredPositions","bindingAlias":null,"type":"Iterable<Object*>*","comment":"<p>Sets what positions should be tried when <code>enforceSpaceConstraints</code> is set.</p>\n<p>Similarly to Angular providers, this supports nested lists of preferred\npositions. The popup will flatten out the list of positions and choose the\nfirst one that fits on screen.</p>\n","classPath":"angular_components/lib/src/laminate/popup/popup_interface.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"slide","bindingAlias":null,"type":"String*","comment":"<p>Direction of popup scaling.</p>\n<p>Valid values are <code>x</code>, <code>y</code>, or <code>null</code>.</p>\n","classPath":"angular_components/lib/material_popup/material_popup.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"source","bindingAlias":null,"type":"PopupSource*","comment":"<p>Sets the source the popup should be created relative to.</p>\n","classPath":"angular_components/lib/src/laminate/popup/popup_interface.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"trackLayoutChanges","bindingAlias":null,"type":"bool*","comment":"<p>Sets whether the <code>source</code> should be tracked for changes.</p>\n","classPath":"angular_components/lib/src/laminate/popup/popup_interface.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"visible","bindingAlias":null,"type":"bool*","comment":"<p>Sets whether the popup should be shown.</p>\n<p>If <code>visible</code> is not the current state, this may close or open the popup.</p>\n","classPath":"angular_components/lib/src/laminate/popup/popup_interface.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"z","bindingAlias":null,"type":"int*","comment":"<p>The z-elevation of the border effect.</p>\n","classPath":"angular_components/lib/material_popup/material_popup.dart","deprecated":false,"deprecatedMessage":null}],"outputs":[{"annotation":"Output","name":"onAutoDismissed","bindingAlias":"autoDismissed","type":"Stream<Event*>*","comment":"<p>Stream on which an event is fired when the popup is auto dismissed.\nOutput event should be either a <code>FocusEvent</code> or a <code>MouseEvent</code>.</p>\n","classPath":"angular_components/lib/material_popup/material_popup.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Output","name":"onClose","bindingAlias":"close","type":"Stream<void>*","comment":"<p>Fires an asynchronous event when the popup is being closed.</p>\n","classPath":"angular_components/lib/src/laminate/popup/popup_interface.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Output","name":"onOpen","bindingAlias":"open","type":"Stream<void>*","comment":"<p>Fires an asynchronous event when the popup is being opened.</p>\n","classPath":"angular_components/lib/src/laminate/popup/popup_interface.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Output","name":"onOpened","bindingAlias":"opened","type":"Stream<void>*","comment":"<p>Stream on which an event is fired after the popup has finished opening.</p>\n","classPath":"angular_components/lib/material_popup/material_popup.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Output","name":"onVisible","bindingAlias":"visibleChange","type":"Stream<bool*>*","comment":"<p>A synchronous event that fires when the <code>visible</code> property of the popup\nchanges (e.g. either from <code>false</code> to <code>true</code> or <code>true</code> to <code>false</code>).</p>\n<p>Unlike <code>onOpen</code> and <code>onClose</code>, this occurs <em>after</em> the event completes.</p>\n","classPath":"angular_components/lib/src/laminate/popup/popup_interface.dart","deprecated":false,"deprecatedMessage":null}]}],"demos":[{"type":"MaterialPopupExample","name":"MaterialPopupExample","selector":"material-popup-example","asset":"material_popup_example|lib/material_popup_example.dart"}],"mainDemo":null,"benchmarks":null,"owners":null,"uxOwners":null,"relatedUrls":null,"showGeneratedDocs":true}]
[{"displayName":"Material Tree","group":null,"docs":[{"docType":"DocType.dartDocInfo","name":"MaterialTreeComponent","deprecated":false,"deprecatedMessage":null,"selector":"material-tree","exportAs":null,"path":"angular_components/lib/src/material_tree/material_tree_impl.dart","comment":"<p>A material selection component that supports a tree of options.</p>\n<p>To use, simply pass in a minimum of <code>options</code> to see items.</p>\n<p>If <code>SelectionOptions</code> implements the <code>Parent</code> interface, a handle is shown\nfor each option that <code>Parent.hasChildren</code> is set for, and toggling the\nhandle will create an additional tree from the results of\n<code>Parent.childrenOf</code>.</p>\n<p>If <code>SelectionOptions</code> implements the <code>Filterable</code> interface.</p>\n<p>To receive feedback from the component, a <code>selection</code> model is required.</p>\n<p>To customize, specify an <code>itemRenderer</code> and/or <code>factoryRenderer</code>.</p>\n","inputs":[{"annotation":"Input","name":"allowDeselectInHierarchy","bindingAlias":null,"type":"bool*","comment":"<p>Whether clicking on a selected item should deselect it. (Only applicable\nwhen <code>supportsHierarchy</code> is <code>true</code>.)</p>\n","classPath":"angular_components/lib/src/material_tree/material_tree_impl.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"allowParentMultiSelection","bindingAlias":null,"type":"bool*","comment":"<p>Whether the widgets supports the selection of non-leaf nodes.</p>\n<p>When <code>false</code>, and the widget is using a multi selection model clicking\nthe widget should toggle expansion when a non-leaf node is clicked. When\n<code>true</code> the widget should select non-leaf nodes when clicked and only\ntoggle expansion when the expansion icon is clicked.</p>\n","classPath":"angular_components/lib/src/material_tree/material_tree_impl.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"allowParentSingleSelection","bindingAlias":null,"type":"bool*","comment":"<p>Whether the widgets supports the selection of non-leaf nodes.</p>\n<p>When <code>false</code>, and the widget is using a single selection model clicking\nthe widget should toggle expansion when a non-leaf node is clicked. When\n<code>true</code> the widget should select non-leaf nodes when clicked and only\ntoggle expansion when the expansion icon is clicked.</p>\n","classPath":"angular_components/lib/src/material_tree/material_tree_impl.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"componentRenderer","bindingAlias":null,"type":"Type* Function(dynamic)*","comment":"","classPath":"angular_components/lib/src/material_tree/material_tree_impl.dart","deprecated":true,"deprecatedMessage":"Use [factoryRenderer] instead"},{"annotation":"Input","name":"expandAll","bindingAlias":null,"type":"bool*","comment":"<p>Whether to initially expand an option group.</p>\n","classPath":"angular_components/lib/src/material_tree/material_tree_impl.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"factoryRenderer","bindingAlias":null,"type":"ComponentFactory<dynamic>* Function(T*)*","comment":"<p>Specifies the factoryRenderer to use to determine the factory for\nrendering an item.</p>\n","classPath":"angular_components/lib/src/material_tree/material_tree_impl.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"itemRenderer","bindingAlias":null,"type":"String* Function(T*)*","comment":"<p>A simple function to render the item to string.</p>\n","classPath":"angular_components/lib/src/material_tree/material_tree_impl.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"optimizeForDropdown","bindingAlias":null,"type":"bool*","comment":"<p>Whether to hide check-marks in a single select dropdown</p>\n","classPath":"angular_components/lib/src/material_tree/material_tree_impl.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"options","bindingAlias":null,"type":"SelectionOptions<T*>*","comment":"<p>The available options for this contianer.</p>\n","classPath":"angular_components/lib/src/material_tree/material_tree_impl.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"selection","bindingAlias":null,"type":"SelectionModel<T*>*","comment":"<p>The selection model this container represents.</p>\n","classPath":"angular_components/lib/src/material_tree/material_tree_impl.dart","deprecated":false,"deprecatedMessage":null}],"outputs":[]},{"docType":"DocType.dartDocInfo","name":"MaterialTreeDropdownComponent","deprecated":false,"deprecatedMessage":null,"selector":"material-tree-dropdown","exportAs":null,"path":"angular_components/lib/src/material_tree/material_tree_dropdown.dart","comment":"<p>A button-triggered dropdown containing a <code>MaterialTreeComponent</code>.</p>\n","inputs":[{"annotation":"Input","name":"allowDeselectInHierarchy","bindingAlias":null,"type":"bool*","comment":"<p>Whether clicking on a selected item should deselect it. (Only applicable\nwhen hierarchy is supported.)</p>\n","classPath":"angular_components/lib/src/material_tree/material_tree_dropdown.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"allowParentSingleSelection","bindingAlias":null,"type":"bool*","comment":"<p>Whether the widgets supports the selection of non-leaf nodes</p>\n<p>When <code>false</code>, and the widget is using a single selection model clicking\nthe widget should toggle expansion when a non-leaf node is clicked. When\n<code>true</code> the widget should select non-leaf nodes when clicked and only\ntoggle expansion when the expansion icon is clicked.</p>\n","classPath":"angular_components/lib/src/material_tree/material_tree_dropdown.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"componentRenderer","bindingAlias":null,"type":"Type* Function(dynamic)*","comment":"","classPath":"angular_components/lib/src/material_tree/material_tree_dropdown.dart","deprecated":true,"deprecatedMessage":"Use [factoryRenderer] instead"},{"annotation":"Input","name":"expandAll","bindingAlias":null,"type":"bool*","comment":"<p>Whether to always expand an option group.</p>\n","classPath":"angular_components/lib/src/material_tree/material_tree_dropdown.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"factoryRenderer","bindingAlias":null,"type":"ComponentFactory<dynamic>* Function(T*)*","comment":"<p>Specifies the factoryRenderer to use to determine the factory for\nrendering an item.</p>\n","classPath":"angular_components/lib/src/material_tree/material_tree_dropdown.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"itemRenderer","bindingAlias":null,"type":"String* Function(T*)*","comment":"<p>A simple function to render the item to string.</p>\n","classPath":"angular_components/lib/src/material_tree/material_tree_dropdown.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"labelRenderer","bindingAlias":null,"type":"String* Function(dynamic)*","comment":"<p>Function to convert the selected value to a string to be displayed as the\nbutton text.</p>\n","classPath":"angular_components/lib/src/material_tree/material_tree_dropdown.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"options","bindingAlias":null,"type":"SelectionOptions<T*>*","comment":"<p>The available options for this contianer.</p>\n","classPath":"angular_components/lib/src/material_tree/material_tree_dropdown.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"placeholder","bindingAlias":null,"type":"String*","comment":"<p>Placeholder to be used for the dropdown text when nothing is selected.</p>\n","classPath":"angular_components/lib/src/material_tree/material_tree_dropdown.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"popupPositions","bindingAlias":null,"type":"List<RelativePosition*>*","comment":"<p>List of positions to try and draw the options popup.</p>\n<p>If left unset or if explicitly set to null, <code>_defaultPopupPositions</code> will\nbe used. See <code>MaterialPopupComponent</code> for more information.</p>\n","classPath":"angular_components/lib/src/material_tree/material_tree_dropdown.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"selection","bindingAlias":null,"type":"SelectionModel<T*>*","comment":"<p>The selection model this container represents.</p>\n","classPath":"angular_components/lib/src/material_tree/material_tree_dropdown.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"shouldExpandAllWhenFiltered","bindingAlias":null,"type":"bool*","comment":"<p>When <code>true</code> expand all items when the tree is being filtered.</p>\n","classPath":"angular_components/lib/src/material_tree/material_tree_dropdown.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"showFilterInsidePopup","bindingAlias":null,"type":"bool*","comment":"<p>Place the filter input inside of the popup.</p>\n","classPath":"angular_components/lib/src/material_tree/material_tree_dropdown.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"visible","bindingAlias":null,"type":"bool*","comment":"<p>Whether to show the dropdown or not.</p>\n","classPath":"angular_components/lib/src/material_tree/material_tree_dropdown.dart","deprecated":false,"deprecatedMessage":null}],"outputs":[{"annotation":"Output","name":"visibleChange","bindingAlias":null,"type":"Stream<bool*>*","comment":"<p>Fired when the dropdown's visibility changes.</p>\n","classPath":"angular_components/lib/src/material_tree/material_tree_dropdown.dart","deprecated":false,"deprecatedMessage":null}]}],"demos":[{"type":"MaterialTreeFlatReadonlyDemoComponent","name":"MaterialTreeFlatReadonlyDemoComponent","selector":"material-tree-flat-readonly-demo","asset":"material_tree_example|lib/src/material_tree_flat_readonly_demo.dart"},{"type":"MaterialTreeFlatSelectableDemoComponent","name":"MaterialTreeFlatSelectableDemoComponent","selector":"material-tree-flat-selectable-demo","asset":"material_tree_example|lib/src/material_tree_flat_selectable_demo.dart"},{"type":"MaterialTreeFlatMultiDemoComponent","name":"MaterialTreeFlatMultiDemoComponent","selector":"material-tree-flat-multi-demo","asset":"material_tree_example|lib/src/material_tree_flat_multi_demo.dart"},{"type":"MaterialTreeNestedSingleDemoComponent","name":"MaterialTreeNestedSingleDemoComponent","selector":"material-tree-nested-single-demo","asset":"material_tree_example|lib/src/material_tree_nested_single_demo.dart"},{"type":"MaterialTreeNestedSingleParentSelectableDemoComponent","name":"MaterialTreeNestedSingleParentSelectableDemoComponent","selector":"material-tree-nested-single-parent-selectable-demo","asset":"material_tree_example|lib/src/material_tree_nested_single_parent_selectable_demo.dart"},{"type":"MaterialTreeNestedMultiDemoComponent","name":"MaterialTreeNestedMultiDemoComponent","selector":"material-tree-nested-multi-demo","asset":"material_tree_example|lib/src/material_tree_nested_multi_demo.dart"},{"type":"MaterialTreeNestedItemRenderingComponent","name":"MaterialTreeNestedItemRenderingComponent","selector":"material-tree-nested-item-rendering-demo","asset":"material_tree_example|lib/src/material_tree_nested_item_rendering_demo.dart"},{"type":"MaterialTreeNestedComponentRenderingComponent","name":"MaterialTreeNestedComponentRenderingComponent","selector":"material-tree-nested-component-rendering-demo","asset":"material_tree_example|lib/src/material_tree_nested_component_rendering_demo.dart"},{"type":"MaterialTreeNestedExpandDemoComponent","name":"MaterialTreeNestedExpandDemoComponent","selector":"material-tree-nested-expand-demo","asset":"material_tree_example|lib/src/material_tree_nested_expansion_state_demo.dart"},{"type":"MaterialTreeDropdownSingleDemoComponent","name":"MaterialTreeDropdownSingleDemoComponent","selector":"material-tree-dropdown-single-demo","asset":"material_tree_example|lib/src/material_tree_dropdown_single_demo.dart"},{"type":"MaterialTreeDropdownMultiDemoComponent","name":"MaterialTreeDropdownMultiDemoComponent","selector":"material-tree-dropdown-multi-demo","asset":"material_tree_example|lib/src/material_tree_dropdown_multi_demo.dart"},{"type":"MaterialTreeDropdownMultiClearDemoComponent","name":"MaterialTreeDropdownMultiClearDemoComponent","selector":"material-tree-dropdown-multi-clear-demo","asset":"material_tree_example|lib/src/material_tree_dropdown_multi_clear_demo.dart"},{"type":"MaterialTreeDropdownFilterableDemoComponent","name":"MaterialTreeDropdownFilterableDemoComponent","selector":"material-tree-flat-filterable-demo","asset":"material_tree_example|lib/src/material_tree_flat_filter_demo.dart"},{"type":"MaterialTreeDropdownNestedFilterableDemoComponent","name":"MaterialTreeDropdownNestedFilterableDemoComponent","selector":"material-tree-nested-filterable-demo","asset":"material_tree_example|lib/src/material_tree_nested_filter_demo.dart"},{"type":"MaterialTreeDropdownNestedFilterInPopupDemoComponent","name":"MaterialTreeDropdownNestedFilterInPopupDemoComponent","selector":"material-tree-nested-filter-in-dropdown-demo","asset":"material_tree_example|lib/src/material_tree_nested_filter_in_popup_demo.dart"},{"type":"MaterialTreeNestedSingleDividerDemoComponent","name":"MaterialTreeNestedSingleDividerDemoComponent","selector":"material-tree-nested-single-divider-demo","asset":"material_tree_example|lib/src/material_tree_nested_single_divider_demo.dart"},{"type":"MaterialTreeViewMoreDemoComponent","name":"MaterialTreeViewMoreDemoComponent","selector":"material-tree-section-demo","asset":"material_tree_example|lib/src/material_tree_view_more_demo.dart"}],"mainDemo":null,"benchmarks":null,"owners":null,"uxOwners":null,"relatedUrls":null,"showGeneratedDocs":true}]
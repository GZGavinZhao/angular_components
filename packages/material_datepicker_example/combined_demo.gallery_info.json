[{"displayName":"Material Datepicker","group":null,"docs":[{"docType":"DocType.dartDocInfo","name":"MaterialDateRangePickerComponent","deprecated":false,"deprecatedMessage":null,"selector":"material-date-range-picker","exportAs":null,"path":"angular_components/lib/material_datepicker/material_date_range_picker.dart","comment":"<p>A material-design-styled date range picker.</p>\n<p>Users can choose preset date ranges, type in custom date ranges, or select\nranges by playing around with the calendar.</p>\n<p>When a user types in a date, dates with 2-digit years are handled specially.\nE.g. 7/7/77 is interpreted as July 7, 1977, not July 7, 77. This logic looks\n20 years into the future: right now (August 2015), \"35\" is interpreted as\n2035 but \"36\" is interpreted as \"1936\". Next year, \"36\" will start to be\ninterpreted as 2036.</p>\n<p>Since a primary use of this picker is for a global per-app date range, this\ncomponent can also read from and write to an <code>ObservableReference</code> instance.\n(The <code>DatepickerModel</code> class is also provided to make using it easier in\ndependency injection.)</p>\n<p>To control the size of the popup, provide a <code>PopupSizeProvider</code> through\ndependency injection. If no PopupSizeProvider is provided, the maximum\nheight of the popup is 600px.</p>\n<p><strong>Attributes:</strong></p>\n<ul>\n<li><code>popupClass</code> -- Class to be added to the range picker popup so that the\npopup can be styled in an encapsulated way. See <code>MaterialPopup</code> for\ndocumentation.</li>\n</ul>\n","inputs":[{"annotation":"Input","name":"activeDateFormat","bindingAlias":null,"type":"DateFormat*","comment":"<p>The <code>DateFormat</code> used to format dates when the input is active.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_range_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"applyButtonLabel","bindingAlias":null,"type":"String*","comment":"<p>The label for the 'Apply' button. Set this variable only if you want a\ndifferent label other than 'Apply'. If set, the input label should be\ninternationalized.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_range_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"compact","bindingAlias":null,"type":"bool*","comment":"<p>Whether to enable compact calendar styles.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_range_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"comparisonOptions","bindingAlias":null,"type":"List<ComparisonOption*>*","comment":"<p><code>ComparisonOption</code>s the user can choose from.</p>\n<p>By default, this is \"Previous period\", \"Previous year\", and \"Custom\".\nThis can only be set once. Null or empty values are ignored.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_range_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"configuration","bindingAlias":"configuration","type":"DateRangePickerConfiguration*","comment":"<p>Date range picker configuration.</p>\n<p>Custom range picker and calendar will be hidden when <code>configuration</code> is\n<code>DateRangePickerConfiguration.predefinedRangesOnly</code>.</p>\n<p>Defaults to <code>DateRangePickerConfiguration.fullyLoaded</code>.\nShould not be changed after initialization.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_range_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"dateFormat","bindingAlias":null,"type":"DateFormat*","comment":"<p>The <code>DateFormat</code> used to format dates.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_range_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"disabled","bindingAlias":null,"type":"bool*","comment":"<p>Whether changing the selected date range should be disabled.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_range_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"dropdownButtonAriaLabel","bindingAlias":null,"type":"String*","comment":"<p>The ARIA label for the dropdown button.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_range_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"error","bindingAlias":null,"type":"String*","comment":"<p>An error displayed below the dropdown button.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_range_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"maxDate","bindingAlias":null,"type":"Date*","comment":"<p>Dates later than <code>maxDate</code> cannot be chosen.</p>\n<p>Defaults to December 31, ten years in the future. Set this to the latest\ndate which makes sense in your domain context. e.g. For apps which analyse\nhistorical data, this could be the current day.  Changes to <code>maxDate</code> are\nonly applied to the selected `range' when the user reopens the popup.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_range_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"minDate","bindingAlias":null,"type":"Date*","comment":"<p>Dates earlier than <code>minDate</code> cannot be chosen.</p>\n<p>Defaults to January 1, ten years ago. Set this to the earliest date which\nmakes sense in your domain context.  e.g. The earliest date for which data\nis available for analysis. Changes to <code>minDate</code> are only applied to the\nselected `range' when the user reopens the popup.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_range_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"movingStartMaintainsLength","bindingAlias":null,"type":"bool*","comment":"<p>For date range selection, whether clicking to move the start date should\nalso move the end date (preserving the length of the selected range).</p>\n<p>Defaults to <code>DatepickerConfig.movingStartMaintainsLength</code> if a\n<code>DatepickerConfig</code> object is provided through dependency injection.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_range_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"placeHolderMsg","bindingAlias":null,"type":"String*","comment":"<p>A placeholder message to display if no date range is selected.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_range_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"predefinedRanges","bindingAlias":"predefinedRanges","type":"List<DatepickerDateRange*>*","comment":"","classPath":"angular_components/lib/material_datepicker/material_date_range_picker.dart","deprecated":true,"deprecatedMessage":"Use [presets] instead."},{"annotation":"Input","name":"preferredPositions","bindingAlias":null,"type":"List<RelativePosition*>*","comment":"<p>A list of positions for popup alignment.</p>\n<p>Defaults to <code>RelativePosition.overlapAlignments</code>.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_range_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"presets","bindingAlias":null,"type":"List<DatepickerPreset*>*","comment":"<p>A list of preset date ranges which the user can choose from.</p>\n<p>These are subject to clamping by <code>minDate</code> and <code>maxDate</code>, and are excluded\nentirely if their end point is before <code>minDate</code> or their start point is\nafter <code>maxDate</code>.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_range_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"range","bindingAlias":null,"type":"DatepickerComparison*","comment":"<p>The selected date range and comparison.</p>\n<p>This datepicker uses <code>DatepickerComparison</code> instead of plain\n<code>DateRangeComparison</code> objects -- this internal implementation adds extra\nneeded features like names and next/prev support.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_range_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"rangeFormatter","bindingAlias":null,"type":"String* Function(DateRange*)*","comment":"<p>Custom date range formatter function to apply to dropdown button text.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_range_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"relativeDaysToToday","bindingAlias":"relativeDaysToToday","type":"bool*","comment":"<p>Whether to use <code>LastNDaysToTodayRange</code> to represent \"N days up to today\".</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_range_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"requireFullPeriods","bindingAlias":null,"type":"bool*","comment":"<p>When 'requireFullPeriods' is true, 'prev/next' button will be disabled\nif previous or next period is not a full predefined period, like 'week'.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_range_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"selection","bindingAlias":"reference","type":"ObservableReference<DatepickerComparison*>*","comment":"<p>An <code>ObservableReference</code> of a date range.</p>\n<p>This can be used if it's more convenient to mutate something in-place\ninstead of getting and setting new date range values.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_range_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"showNextPrevButtons","bindingAlias":null,"type":"bool*","comment":"<p>Whether or not to show the next and previous buttons.</p>\n<p>Defaults to true.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_range_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"supportsClearRange","bindingAlias":"supportsClearRange","type":"bool*","comment":"<p>Whether or not this date range picker supports clearing date range.</p>\n<p>Default to false.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_range_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"supportsComparison","bindingAlias":null,"type":"bool*","comment":"<p>Whether or not this date range picker supports choosing time comparison\nranges.</p>\n<p>If <code>configuration</code> is <code>DateRangePickerConfiguration.predefinedRangesOnly</code>,\ncomparison is not supported.</p>\n<p>Defaults to true.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_range_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"supportsDaysInputs","bindingAlias":null,"type":"bool*","comment":"<p>Whether or not this date range picker includes a section to input 'N days\nto today' and 'N days to yesterday' ranges.</p>\n<p>Defaults to <code>true</code>.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_range_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"useMenuForPresets","bindingAlias":null,"type":"bool*","comment":"<p>Whether to use menu-items-groups for presets for improved accessibility.</p>\n<p>Internal flag for safe transition.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_range_picker.dart","deprecated":false,"deprecatedMessage":null}],"outputs":[{"annotation":"Output","name":"onFocus","bindingAlias":"focus","type":"Stream<FocusEvent*>*","comment":"<p>Event when the element is focused.</p>\n","classPath":"angular_components/lib/mixins/focusable_mixin.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Output","name":"onPopupVisible","bindingAlias":"popupVisible","type":"Stream<bool*>*","comment":"<p>Published when the datepicker popup starts opening or closing.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_range_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Output","name":"rangeChange","bindingAlias":null,"type":"Stream<DatepickerComparison*>*","comment":"<p>Published when the selected date range or comparison range changes.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_range_picker.dart","deprecated":false,"deprecatedMessage":null}]},{"docType":"DocType.dartDocInfo","name":"MaterialDatepickerComponent","deprecated":false,"deprecatedMessage":null,"selector":"material-datepicker","exportAs":null,"path":"angular_components/lib/material_datepicker/material_datepicker.dart","comment":"<p>A material-design-styled single date picker -- a date parsing input and\ncalendar picker. Users can type in their own custom dates, or click on the\ncalendar to select a date.</p>\n<p>When a user types in a date, dates with 2-digit years are handled specially.\nE.g. 7/7/77 is interpreted as July 7, 1977, not July 7, 77. This logic looks\n20 years into the future: right now (August 2015), \"35\" is interpreted as\n2035 but \"36\" is interpreted as \"1936\". Next year, \"36\" will start to be\ninterpreted as 2036.</p>\n<p>See also <code>material-date-range-picker</code> if you want to choose date ranges.</p>\n","inputs":[{"annotation":"Input","name":"ariaLabelForDropdownButton","bindingAlias":null,"type":"String*","comment":"<p>aria-label attached to the dropdown button that opens the date picker.</p>\n","classPath":"angular_components/lib/material_datepicker/material_datepicker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"compact","bindingAlias":null,"type":"bool*","comment":"<p>Whether to enable compact calendar styles.</p>\n","classPath":"angular_components/lib/material_datepicker/material_datepicker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"date","bindingAlias":null,"type":"Date*","comment":"<p>The selected date.</p>\n","classPath":"angular_components/lib/material_datepicker/material_datepicker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"disabled","bindingAlias":null,"type":"bool*","comment":"<p>Whether changing the selected date should be disabled.</p>\n","classPath":"angular_components/lib/material_datepicker/material_datepicker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"error","bindingAlias":null,"type":"String*","comment":"<p>An error displayed below the closed date picker.</p>\n<p>The picker also gets a red underline when this is set.</p>\n","classPath":"angular_components/lib/material_datepicker/material_datepicker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"maxDate","bindingAlias":null,"type":"Date*","comment":"<p>Dates later than <code>maxDate</code> cannot be chosen.</p>\n<p>Defaults to December 31, ten years in the future. Set this to the latest\ndate which makes sense in your domain context. e.g. For apps which analyse\nhistorical data, this could be the current day.</p>\n","classPath":"angular_components/lib/material_datepicker/material_datepicker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"minDate","bindingAlias":null,"type":"Date*","comment":"<p>Dates earlier than <code>minDate</code> cannot be chosen.</p>\n<p>Defaults to January 1, ten years ago. Set this to the earliest date which\nmakes sense in your domain context. e.g. The earliest date for which data\nis available for analysis.</p>\n","classPath":"angular_components/lib/material_datepicker/material_datepicker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"numCalendarWeekRows","bindingAlias":null,"type":"int*","comment":"<p>Sets the number of weeks the calendar should show.</p>\n","classPath":"angular_components/lib/material_datepicker/material_datepicker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"outputFormat","bindingAlias":null,"type":"DateFormat*","comment":"<p>The format used to format dates.</p>\n<p>Defaults to <code>yMMMd</code>, e.g. 'Jan 23, 2015'.</p>\n","classPath":"angular_components/lib/material_datepicker/material_datepicker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"placeholderMsg","bindingAlias":null,"type":"String*","comment":"<p>Gets the i18n'ed \"Enter date\" placeholder text.</p>\n","classPath":"angular_components/lib/material_datepicker/material_datepicker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"popupVisible","bindingAlias":null,"type":"bool*","comment":"<p>Opens or closes the datepicker.</p>\n","classPath":"angular_components/lib/material_datepicker/material_datepicker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"presetDates","bindingAlias":"predefinedDates","type":"List<SingleDayRange*>*","comment":"<p>A list of preset dates which the user can choose from.</p>\n<p>Defaults is empty so any list is shown.</p>\n","classPath":"angular_components/lib/material_datepicker/material_datepicker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"required","bindingAlias":null,"type":"bool*","comment":"<p>False if null dates are allowed.</p>\n<p>If true, the embedded text field will display an error to the user if\nblank. If false, clearing the text field will set <code>date</code> to <code>null</code>.</p>\n","classPath":"angular_components/lib/material_datepicker/material_datepicker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"selectDatePlaceHolderMsg","bindingAlias":null,"type":"String*","comment":"<p>Gets the i18n'ed \"Select a date\" placeholder text.</p>\n","classPath":"angular_components/lib/material_datepicker/material_datepicker.dart","deprecated":false,"deprecatedMessage":null}],"outputs":[{"annotation":"Output","name":"dateChange","bindingAlias":null,"type":"Stream<Date*>*","comment":"<p>Publishes events when the selected date changes.</p>\n","classPath":"angular_components/lib/material_datepicker/material_datepicker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Output","name":"onFocus","bindingAlias":"focus","type":"Stream<FocusEvent*>*","comment":"<p>Event when the element is focused.</p>\n","classPath":"angular_components/lib/mixins/focusable_mixin.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Output","name":"popupVisibleChange","bindingAlias":null,"type":"Stream<bool*>*","comment":"<p>Publishes events when the popupVisible changes.</p>\n","classPath":"angular_components/lib/material_datepicker/material_datepicker.dart","deprecated":false,"deprecatedMessage":null}]},{"docType":"DocType.dartDocInfo","name":"MaterialCalendarPickerComponent","deprecated":false,"deprecatedMessage":null,"selector":"material-calendar-picker","exportAs":null,"path":"angular_components/lib/material_datepicker/material_calendar_picker.dart","comment":"<p>An infinitely-scrolling material-styled calendar which supports selecting\nsingle dates or date ranges.</p>\n<p>You probably want to use <code>material-datepicker</code> or\n<code>material-date-range-picker</code> instead of this.</p>\n<p><strong>Attributes:</strong></p>\n<ul>\n<li><code>mode</code> -- What sort of interaction this calendar supports. Valid values\nare \"none\", \"single-date\", or \"date-range\". Defaults to \"none\".</li>\n</ul>\n<p><strong>Styling:</strong></p>\n<p>Calendar selections are blue by default. The color of selections can be\ncustomized using the <code>calendar-highlights</code> SCSS mixin.</p>\n<p>Selected ranges have IDs, which are used to pick the right style out of the\nmixin. For example, the standard date range picker uses this styling:</p>\n<pre><code class=\"language-Scss\"> @include calendar-highlights('.calendar', (\n   range: $mat-blue-map,\n   comparison: $mat-google-yellow-map,\n   range comparison: $mat-green-map,\n ));\n</code></pre>\n<p>This sets the primary date range (which has the ID \"range\") to blue, the\ncomparison date range to yellow, and the overlap to green. The overlap color\nhas to be specified manually; the calendar doesn't try to blend the colors\nautomatically.</p>\n","inputs":[{"annotation":"Input","name":"allowHighlightUpdates","bindingAlias":null,"type":"bool*","comment":"<p>Set this to false to temporarily suppress updates to the calendar's range\nhighlights.</p>\n<p>Defaults to true.</p>\n","classPath":"angular_components/lib/material_datepicker/material_calendar_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"compact","bindingAlias":null,"type":"bool*","comment":"<p>Whether to enable compact calendar styles.</p>\n","classPath":"angular_components/lib/material_datepicker/material_calendar_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"maxDate","bindingAlias":null,"type":"Date*","comment":"<p>Dates later than <code>maxDate</code> cannot be clicked on or scrolled to.</p>\n<p>The calendar will display the entire month containing this date, but days\nafter <code>maxDate</code> will be disabled (greyed out). Note that disabled dates\ncan still be selected programmatically, e.g. if the parent component\nspecifies presets which extend past minDate/maxDate. Defaults to December\n31, ten years in the future. Set this to the latest date which makes sense\nin your domain context. e.g. For apps which analyse historical data, this\ncould be the current day.</p>\n","classPath":"angular_components/lib/material_datepicker/material_calendar_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"minDate","bindingAlias":null,"type":"Date*","comment":"<p>Dates earlier than <code>minDate</code> cannot be clicked on or scrolled to.</p>\n<p>The calendar will display the entire month containing this date, but days\nbefore <code>minDate</code> will be disabled (greyed out). Note that disabled dates\ncan still be selected programmatically, e.g. if the parent component\nspecifies presets which extend past minDate/maxDate. Defaults to January\n1, ten years ago. Set this to the earliest date which makes sense in your\ndomain context. e.g. The earliest date for which data is available for\nanalysis.</p>\n","classPath":"angular_components/lib/material_datepicker/material_calendar_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"movingStartMaintainsLength","bindingAlias":null,"type":"bool*","comment":"<p>For date range selection, whether clicking to move the start date should\nalso move the end date (preserving the length of the selected range).</p>\n<p>Defaults to true, unless an enclosing component has a different default.</p>\n","classPath":"angular_components/lib/material_datepicker/material_calendar_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"state","bindingAlias":null,"type":"CalendarState*","comment":"<p>An object describing the entire state of the calendar -- what's selected\non the calendar, and whether or not the selection is currently \"active\".</p>\n","classPath":"angular_components/lib/material_datepicker/material_calendar_picker.dart","deprecated":false,"deprecatedMessage":null}],"outputs":[{"annotation":"Output","name":"stateChange","bindingAlias":null,"type":"Stream<CalendarState*>*","comment":"<p>Fired when the calendar state changes -- e.g. when the user starts\ndragging the selected date range.</p>\n","classPath":"angular_components/lib/material_datepicker/material_calendar_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Output","name":"visibleMonth","bindingAlias":null,"type":"Stream<Date*>*","comment":"<p>Fired when the visible month changes -- e.g. when a new month scrolls into\nview.</p>\n","classPath":"angular_components/lib/material_datepicker/material_calendar_picker.dart","deprecated":false,"deprecatedMessage":null}]},{"docType":"DocType.dartDocInfo","name":"MaterialMonthPickerComponent","deprecated":false,"deprecatedMessage":null,"selector":"material-month-picker","exportAs":null,"path":"angular_components/lib/material_datepicker/material_month_picker.dart","comment":"<p>An material-styled calendar which supports selecting single months or month\nranges.</p>\n<p><strong>Attributes:</strong></p>\n<ul>\n<li><code>mode</code> -- What sort of interaction this calendar supports. Valid values\nare \"none\", \"single-date\", or \"date-range\". Defaults to \"none\".</li>\n</ul>\n","inputs":[{"annotation":"Input","name":"maxDate","bindingAlias":null,"type":"Date*","comment":"<p>Dates later than <code>maxDate</code> cannot be clicked on or scrolled to.</p>\n<p>The calendar will display the entire year containing this date, but months\nafter <code>maxDate</code> will be disabled (greyed out). Note that disabled dates\ncan still be selected programmatically, e.g. if the parent component\nspecifies presets which extend past minDate/maxDate. Defaults to December,\nten years in the future. Set this to the latest date which makes sense in\nyour domain context. e.g. For apps which analyse historical data, this\ncould be the current month.</p>\n","classPath":"angular_components/lib/material_datepicker/material_month_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"minDate","bindingAlias":null,"type":"Date*","comment":"<p>Dates earlier than <code>minDate</code> cannot be clicked on or scrolled to.</p>\n<p>The calendar will display the entire year containing this date, but months\nbefore <code>minDate</code> will be disabled (greyed out). Note that disabled dates\ncan still be selected programmatically, e.g. if the parent component\nspecifies presets which extend past minDate/maxDate. Defaults to January,\nten years ago. Set this to the earliest date which makes sense in your\ndomain context. e.g. The earliest date for which data is available for\nanalysis.</p>\n","classPath":"angular_components/lib/material_datepicker/material_month_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"state","bindingAlias":null,"type":"CalendarState*","comment":"<p>An object describing the entire state of the calendar -- what's selected\non the calendar, and whether or not the selection is currently \"active\".</p>\n","classPath":"angular_components/lib/material_datepicker/material_month_picker.dart","deprecated":false,"deprecatedMessage":null}],"outputs":[{"annotation":"Output","name":"stateChange","bindingAlias":null,"type":"Stream<CalendarState*>*","comment":"<p>Fired when the calendar state changes -- e.g. when the user starts\ndragging the selected date range.</p>\n","classPath":"angular_components/lib/material_datepicker/material_month_picker.dart","deprecated":false,"deprecatedMessage":null}]},{"docType":"DocType.dartDocInfo","name":"MaterialTimePickerComponent","deprecated":false,"deprecatedMessage":null,"selector":"material-time-picker","exportAs":null,"path":"angular_components/lib/material_datepicker/material_time_picker.dart","comment":"<p>A material-design-styled time input component.</p>\n","inputs":[{"annotation":"Input","name":"disabled","bindingAlias":null,"type":"bool*","comment":"<p>Whether changing the selected time should be disabled.</p>\n","classPath":"angular_components/lib/material_datepicker/material_time_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"error","bindingAlias":null,"type":"String*","comment":"<p>An error displayed below the closed date picker.</p>\n<p>The picker also gets a red underline when this is set.</p>\n","classPath":"angular_components/lib/material_datepicker/material_time_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"increment","bindingAlias":null,"type":"int*","comment":"<p>Increment of dropdown options in minutes.</p>\n<p>Throws <code>ArgumentError</code> if value is less than 1 minute or greater\nthan 12 hours or day divided by it is fractional.</p>\n","classPath":"angular_components/lib/material_datepicker/material_time_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"maxTime","bindingAlias":null,"type":"DateTime*","comment":"<p>Maximum date time that can be chosen by the user.</p>\n","classPath":"angular_components/lib/material_datepicker/material_time_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"minTime","bindingAlias":null,"type":"DateTime*","comment":"<p>Minimum date time that can be chosen by the user.</p>\n","classPath":"angular_components/lib/material_datepicker/material_time_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"outputFormat","bindingAlias":null,"type":"DateFormat*","comment":"<p>The format used to format time.</p>\n<p>Defaults to <code>jm</code>, e.g. '5:08 PM'.</p>\n","classPath":"angular_components/lib/material_datepicker/material_time_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"popupVisible","bindingAlias":null,"type":"bool*","comment":"<p>Make the dropdown visibility accessible so it can be opened\nfrom outside the component.</p>\n","classPath":"angular_components/lib/material_datepicker/material_time_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"required","bindingAlias":null,"type":"bool*","comment":"<p>Whether the time entry is required.</p>\n<p>If true, the embedded text field will display an error to the user if\nblank. If false, clearing the text field will set <code>time</code> to <code>null</code>.</p>\n","classPath":"angular_components/lib/material_datepicker/material_time_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"time","bindingAlias":null,"type":"DateTime*","comment":"<p>The selected time.</p>\n<p>Date part sets to epoch(1970-1-1).</p>\n","classPath":"angular_components/lib/material_datepicker/material_time_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"utc","bindingAlias":null,"type":"bool*","comment":"<p>Whether the widget returns time in the UTC time zone.</p>\n<p>By default, the widget returns time in the local time zone.</p>\n","classPath":"angular_components/lib/material_datepicker/material_time_picker.dart","deprecated":false,"deprecatedMessage":null}],"outputs":[{"annotation":"Output","name":"popupVisibleChange","bindingAlias":null,"type":"Stream<bool*>*","comment":"<p>Publishes events when the <code>popupVisible</code> changes.</p>\n","classPath":"angular_components/lib/material_datepicker/material_time_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Output","name":"timeChange","bindingAlias":null,"type":"Stream<DateTime*>*","comment":"<p>Publishes events when the selected time changes.</p>\n<p>Date is set to epoch(1970-1-1) and time set to <code>time</code></p>\n","classPath":"angular_components/lib/material_datepicker/material_time_picker.dart","deprecated":false,"deprecatedMessage":null}]},{"docType":"DocType.dartDocInfo","name":"MaterialDateTimePickerComponent","deprecated":false,"deprecatedMessage":null,"selector":"material-date-time-picker","exportAs":null,"path":"angular_components/lib/material_datepicker/material_date_time_picker.dart","comment":"<p>A material-design-styled single date and time picker.</p>\n<p>The selected <code>dateTime</code> is always in local time zone.\nSee <code>material-datepicker</code> if you want to choose date only.\nSee <code>material-time-picker</code> if you want to choose time only.</p>\n<p><strong>Example usage:</strong></p>\n<pre><code>&lt;material-date-time-picker [(dateTime)]=\"myDateTime\"&gt;\n&lt;/material-date-time-picker&gt;\n</code></pre>\n","inputs":[{"annotation":"Input","name":"dateTime","bindingAlias":null,"type":"DateTime*","comment":"<p>The selected date time.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_time_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"disabled","bindingAlias":null,"type":"bool*","comment":"<p>Whether changing the selected date and time should be disabled.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_time_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"increment","bindingAlias":null,"type":"int*","comment":"<p>Increment of time dropdown options in minutes, passed on to time picker.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_time_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"maxDateTime","bindingAlias":null,"type":"DateTime*","comment":"<p>Maximum date time that can be chosen by the user.</p>\n<p>Defaults to December 31 23:59, ten years in the future. Set this to the\nlatest date time which makes sense in your domain context. e.g., for apps\nwhich analyse historical data, this could be the current date time.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_time_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"minDateTime","bindingAlias":null,"type":"DateTime*","comment":"<p>Minimum date time that can be chosen by the user.</p>\n<p>Defaults to January 1 00:00, ten years ago. Set this to the earliest date\ntime which makes sense in your domain context. e.g., the earliest date\ntime for which data is available for analysis.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_time_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"outputDateFormat","bindingAlias":null,"type":"DateFormat*","comment":"<p>The format used to format dates.</p>\n<p>Defaults to <code>yMMMd</code>, e.g. 'Jan 23, 2015'.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_time_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"outputTimeFormat","bindingAlias":null,"type":"DateFormat*","comment":"<p>The format used to format time.</p>\n<p>Defaults to <code>jm</code>, e.g. '5:08 PM'.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_time_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"required","bindingAlias":null,"type":"bool*","comment":"<p>Whether the date and time entry is required.</p>\n<p>If true, the embedded text fields will display an error to the user if\nblank. If false, clearing the text fields will set <code>dateTime</code> to <code>null</code>.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_time_picker.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"utc","bindingAlias":null,"type":"bool*","comment":"<p>Whether the widget returns <code>dateTime</code> in the UTC time zone.</p>\n<p>In default, the widget returns time in the local time zone.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_time_picker.dart","deprecated":false,"deprecatedMessage":null}],"outputs":[{"annotation":"Output","name":"dateTimeChange","bindingAlias":null,"type":"Stream<DateTime*>*","comment":"<p>Publishes events when the selected <code>dateTime</code> changes.</p>\n","classPath":"angular_components/lib/material_datepicker/material_date_time_picker.dart","deprecated":false,"deprecatedMessage":null}]},{"docType":"DocType.dartDocInfo","name":"DateInputDirective","deprecated":false,"deprecatedMessage":null,"selector":"material-input[dateParsing]","exportAs":null,"path":"angular_components/lib/material_datepicker/date_input.dart","comment":"<p>A decorator which makes the decorated input automatically parse localized\ndates.</p>\n<p>When a user types in a date, dates with 2-digit years are handled specially.\nE.g. 7/7/77 is interpreted as July 7, 1977, not July 7, 77. This logic looks\n20 years into the future: right now (August 2015), \"35\" is interpreted as\n2035 but \"36\" is interpreted as \"1936\". Next year, \"36\" will start to be\ninterpreted as 2036.</p>\n<p>The value of the decorated input is two-way bound with the <code>date</code> attribute:</p>\n<ul>\n<li>When that date changes, the input will update to display it.</li>\n<li>When the input's text is changed (only on \"change\" events, not on each\nkeypress), the decorator will try to parse that text as a date. If it's a\nvalid date, it'll update the selected date to reflect that.</li>\n</ul>\n<p>This hijacks the input's <code>on-change</code> property, so don't specify that on the\ninput, or this won't work.</p>\n","inputs":[{"annotation":"Input","name":"date","bindingAlias":null,"type":"Date*","comment":"<p>The selected date.</p>\n","classPath":"angular_components/lib/material_datepicker/date_input.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"dateFormat","bindingAlias":null,"type":"DateFormat*","comment":"<p>The <code>DateFormat</code> used to format dates. When <code>isMonthInput</code> is false, this\ndefaults to <code>yMMMd</code>, e.g. \"Jul 31, 2015\". When <code>isMonthInput</code> is true,\nthis defaults to <code>yMMM</code>, e.g. \"Jul 2015\".</p>\n","classPath":"angular_components/lib/material_datepicker/date_input.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"isMonthInput","bindingAlias":"month","type":"bool*","comment":"<p>If true, the control is used for inputting months rather than specific\ndays. This impacts both how dates are parsed and how they may be altered\nto fit to the beginning or end of the selected month (depending on\n<code>rangeEnd</code>).</p>\n","classPath":"angular_components/lib/material_datepicker/date_input.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"maxDate","bindingAlias":null,"type":"Date*","comment":"<p>The latest recognized date, inclusive.\nDefaults to Dec 31, 9999 -- i.e., limited to 4-digit years.</p>\n","classPath":"angular_components/lib/material_datepicker/date_input.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"minDate","bindingAlias":null,"type":"Date*","comment":"<p>The earliest recognized date, inclusive.\nDefaults to Jan 1, 1000 -- i.e., limited to 4-digit years.</p>\n","classPath":"angular_components/lib/material_datepicker/date_input.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"rangeEnd","bindingAlias":null,"type":"bool*","comment":"<p>Controls whether entered dates are snapped to the beginning of the\nspecified month (false), or to the end of the specified month (true).</p>\n<p>Only used when <code>isMonthInput</code> is true.</p>\n","classPath":"angular_components/lib/material_datepicker/date_input.dart","deprecated":false,"deprecatedMessage":null}],"outputs":[{"annotation":"Output","name":"dateChange","bindingAlias":null,"type":"Stream<Date*>*","comment":"<p>Fired when a valid date value is entered.</p>\n","classPath":"angular_components/lib/material_datepicker/date_input.dart","deprecated":false,"deprecatedMessage":null}]},{"docType":"DocType.dartDocInfo","name":"DateRangeInputComponent","deprecated":false,"deprecatedMessage":null,"selector":"date-range-input","exportAs":null,"path":"angular_components/lib/material_datepicker/date_range_input.dart","comment":"<p>A date-range-input is two date inputs glued together.</p>\n<p>When a user types in a date, dates with 2-digit years are handled specially.\nE.g. 7/7/77 is interpreted as July 7, 1977, not July 7, 77. This logic looks\n20 years into the future: right now (August 2015), \"35\" is interpreted as\n2035 but \"36\" is interpreted as \"1936\". Next year, \"36\" will start to be\ninterpreted as 2036.</p>\n","inputs":[{"annotation":"Input","name":"activeDateFormat","bindingAlias":null,"type":"DateFormat*","comment":"<p>The <code>DateFormat</code> used to format dates when the input is active.</p>\n<p>Defaults to <code>yMd</code>, e.g. \"7/31/15\".</p>\n","classPath":"angular_components/lib/material_datepicker/date_range_input.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"dateFormat","bindingAlias":null,"type":"DateFormat*","comment":"<p>The <code>DateFormat</code> used to format dates. Defaults to <code>yMMMd</code>,\ne.g. \"Jul 31, 2015\".</p>\n","classPath":"angular_components/lib/material_datepicker/date_range_input.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"disabled","bindingAlias":null,"type":"bool*","comment":"<p>Whether the input field is disabled.</p>\n<p>If true, the component disable both start and end input field.</p>\n","classPath":"angular_components/lib/material_datepicker/date_range_input.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"isClearRangeSelected","bindingAlias":null,"type":"bool*","comment":"<p><strong>Internal use only.</strong></p>\n<p>Used by material_date_range_editor.</p>\n","classPath":"angular_components/lib/material_datepicker/date_range_input.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"maxDate","bindingAlias":null,"type":"Date*","comment":"<p>The latest recognized date, inclusive.\nDefaults to Dec 31, 9999 -- i.e., limited to 4-digit years.</p>\n","classPath":"angular_components/lib/material_datepicker/date_range_input.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"minDate","bindingAlias":null,"type":"Date*","comment":"<p>The earliest recognized date, inclusive.\nDefaults to Jan 1, 1000 -- i.e., limited to 4-digit years.</p>\n","classPath":"angular_components/lib/material_datepicker/date_range_input.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"range","bindingAlias":null,"type":"DateRange*","comment":"<p>The selected date range.</p>\n","classPath":"angular_components/lib/material_datepicker/date_range_input.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"rangeId","bindingAlias":null,"type":"String*","comment":"<p>ID of the range this date-range-input controls.</p>\n","classPath":"angular_components/lib/material_datepicker/date_range_input.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"state","bindingAlias":null,"type":"CalendarState*","comment":"<p>An object describing the entire state of the calendar -- what's selected\non the calendar, and whether or not the selection is currently \"active\".</p>\n","classPath":"angular_components/lib/material_datepicker/date_range_input.dart","deprecated":false,"deprecatedMessage":null}],"outputs":[{"annotation":"Output","name":"rangeChange","bindingAlias":null,"type":"Stream<DateRange*>*","comment":"<p>Fired when the selected date range changes. Text input only triggers this\nif both inputs are valid dates</p>\n","classPath":"angular_components/lib/material_datepicker/date_range_input.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Output","name":"stateChange","bindingAlias":null,"type":"Stream<CalendarState*>*","comment":"<p>Fired when the calendar state changes -- e.g. when the user starts\ndragging the selected date range.</p>\n","classPath":"angular_components/lib/material_datepicker/date_range_input.dart","deprecated":false,"deprecatedMessage":null}]}],"demos":[{"type":"MaterialDateRangePickerDemoComponent","name":"MaterialDateRangePickerDemoComponent","selector":"material-date-range-picker-demo","asset":"material_datepicker_example|lib/material_date_range_picker_demo.dart"},{"type":"MaterialDatepickerDemoComponent","name":"MaterialDatepickerDemoComponent","selector":"material-datepicker-demo","asset":"material_datepicker_example|lib/material_datepicker_demo.dart"},{"type":"MaterialCalendarPickerDemoComponent","name":"MaterialCalendarPickerDemoComponent","selector":"material-calendar-picker-demo","asset":"material_datepicker_example|lib/material_calendar_picker_demo.dart"},{"type":"MaterialMonthPickerDemoComponent","name":"MaterialMonthPickerDemoComponent","selector":"material-month-picker-demo","asset":"material_datepicker_example|lib/material_month_picker_demo.dart"},{"type":"MaterialTimePickerDemoComponent","name":"MaterialTimePickerDemoComponent","selector":"material-time-picker-demo","asset":"material_datepicker_example|lib/material_time_picker_demo.dart"},{"type":"MaterialDateTimePickerDemoComponent","name":"MaterialDateTimePickerDemoComponent","selector":"material-date-time-picker-demo","asset":"material_datepicker_example|lib/material_date_time_picker_demo.dart"},{"type":"DateInputDemoComponent","name":"DateInputDemoComponent","selector":"date-input-demo","asset":"material_datepicker_example|lib/date_input_demo.dart"},{"type":"DateRangeInputDemoComponent","name":"DateRangeInputDemoComponent","selector":"date-range-input-demo","asset":"material_datepicker_example|lib/date_range_input_demo.dart"}],"mainDemo":null,"benchmarks":null,"owners":null,"uxOwners":null,"relatedUrls":null,"showGeneratedDocs":true}]
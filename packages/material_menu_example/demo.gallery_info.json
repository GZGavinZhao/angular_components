[{"displayName":"Material Menu","group":null,"docs":[{"docType":"DocType.dartDocInfo","name":"MaterialMenuComponent","deprecated":false,"deprecatedMessage":null,"selector":"material-menu","exportAs":null,"path":"angular_components/lib/material_menu/material_menu.dart","comment":"<p>The Material Menu renders a menu based on a <code>MenuModel</code> object. This menu\ncomprises a <code>material-list</code> in a <code>material-popup</code> and a\n<code>material-button</code> whose text or icon can be specified by the caller.</p>\n<p>The menu expands when the button is clicked and closes when either an item\nis selected or a region outside the dropdown is clicked.</p>\n","inputs":[{"annotation":"Input","name":"ariaLabel","bindingAlias":null,"type":"String*","comment":"<p>Aria label for button trigger.</p>\n","classPath":"angular_components/lib/material_menu/material_menu.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"buttonText","bindingAlias":null,"type":"String*","comment":"<p>Trigger button text. Ignored if the <code>MenuModel</code> has an icon.</p>\n","classPath":"angular_components/lib/material_menu/material_menu.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"closeMenuOnClick","bindingAlias":null,"type":"bool*","comment":"<p>If true, the menu popup will be closed if the trigger button is clicked\nwhile the menu is open.</p>\n<p>Otherwise, clicking the trigger button when the menu is already open will\nnot do anything.</p>\n","classPath":"angular_components/lib/material_menu/menu_popup_wrapper.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"disabled","bindingAlias":null,"type":"bool*","comment":"<p>Whether the menu is disabled or not.</p>\n","classPath":"angular_components/lib/material_menu/material_menu.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"expandAction","bindingAlias":null,"type":"ExpandAction*","comment":"<p>Expansion state of the menu popup.</p>\n<p>Null value means popup is closed, any other value means popup is open.\nThis input is used to pass parameters with the open action. E.g. which\nelement is selected when the popup is focused.</p>\n","classPath":"angular_components/lib/material_menu/menu_popup_wrapper.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"isExpanded","bindingAlias":null,"type":"bool*","comment":"<p>Whether the menu is open.</p>\n<p>Sets the default expansion state when this input is used to control menu\nvisibility. Default state means no menu items are focused when the menu\npopup is opened.</p>\n","classPath":"angular_components/lib/material_menu/menu_popup_wrapper.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"menu","bindingAlias":null,"type":"MenuModel<dynamic>*","comment":"<p>The displayed menu.</p>\n","classPath":"angular_components/lib/material_menu/menu_popup_wrapper.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"popupClass","bindingAlias":null,"type":"String*","comment":"<p>CSS classes to append onto the menu popup.</p>\n<p>These CSS classes will be copied into the popup overlay. The classes can\nbe used to select DOM elements within the overlay when the popup is open.</p>\n","classPath":"angular_components/lib/material_menu/material_menu.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"preferredPositions","bindingAlias":null,"type":"Iterable<dynamic>*","comment":"<p>Preferred positions to pass to the material popup component.</p>\n<p>For the meaning of this parameter, see the PopupInterface documentation.</p>\n","classPath":"angular_components/lib/material_menu/menu_popup_wrapper.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"tabbable","bindingAlias":null,"type":"bool*","comment":"<p>Whether the menu is tabbable or not.</p>\n","classPath":"angular_components/lib/material_menu/material_menu.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"width","bindingAlias":null,"type":"dynamic","comment":"<p>Width of the menu.</p>\n","classPath":"angular_components/lib/material_menu/menu_popup_wrapper.dart","deprecated":false,"deprecatedMessage":null}],"outputs":[{"annotation":"Output","name":"expandActionChange","bindingAlias":null,"type":"Stream<ExpandAction*>*","comment":"<p>Outputs an event when the menu expansion state is changed.</p>\n","classPath":"angular_components/lib/material_menu/menu_popup_wrapper.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Output","name":"isExpandedChange","bindingAlias":null,"type":"Stream<bool*>*","comment":"<p>Outputs an event when the menu is expanded.</p>\n","classPath":"angular_components/lib/material_menu/menu_popup_wrapper.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Output","name":"onFocus","bindingAlias":"focus","type":"Stream<FocusEvent*>*","comment":"<p>Event when the element is focused.</p>\n","classPath":"angular_components/lib/mixins/focusable_mixin.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Output","name":"onTrigger","bindingAlias":"trigger","type":"Stream<void>*","comment":"<p>Outputs an event when the menu button is triggered.</p>\n","classPath":"angular_components/lib/material_menu/menu_popup_wrapper.dart","deprecated":false,"deprecatedMessage":null}]},{"docType":"DocType.dartDocInfo","name":"MaterialFabMenuComponent","deprecated":false,"deprecatedMessage":null,"selector":"material-fab-menu","exportAs":null,"path":"angular_components/lib/material_menu/material_fab_menu.dart","comment":"<p>A fab menu item with optional sub menu.</p>\n","inputs":[{"annotation":"Input","name":"menuItem","bindingAlias":null,"type":"MenuItem<dynamic>*","comment":"<p><code>MenuItem</code> that defines the appearance and behavior of this menu.</p>\n<p>If the item has sub menu with no empty item groups, a menu will be\nsurfaced via clicking or hovering.</p>\n","classPath":"angular_components/lib/material_menu/material_fab_menu.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"naviId","bindingAlias":null,"type":"String*","comment":"<p>Id used internally.</p>\n","classPath":"angular_components/lib/material_menu/material_fab_menu.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"preferredPopupPositions","bindingAlias":null,"type":"List<RelativePosition*>*","comment":"<p>Popup positions for the menu popup to show up in.</p>\n","classPath":"angular_components/lib/material_menu/material_fab_menu.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"trackLayoutChanges","bindingAlias":null,"type":"bool*","comment":"<p>Sets whether the suggestion list scrolls with the input box.</p>\n<p>This is a pass through property, as defined in <code>PopupInterface</code>.</p>\n","classPath":"angular_components/lib/mixins/track_layout_changes.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"viewModel","bindingAlias":null,"type":"MaterialFabMenuModel*","comment":"<p>Sets the view model for this component.</p>\n","classPath":"angular_components/lib/material_menu/material_fab_menu.dart","deprecated":false,"deprecatedMessage":null}],"outputs":[{"annotation":"Output","name":"onShow","bindingAlias":null,"type":"Stream<void>*","comment":"<p>Emits when fab is opened.</p>\n","classPath":"angular_components/lib/material_menu/material_fab_menu.dart","deprecated":false,"deprecatedMessage":null}]}],"demos":[{"type":"MaterialMenuDemoComponent","name":"MaterialMenuDemoComponent","selector":"material-menu-demo","asset":"material_menu_example|lib/material_menu_demo.dart"},{"type":"MaterialFabMenuDemoComponent","name":"MaterialFabMenuDemoComponent","selector":"material-fab-menu-demo","asset":"material_menu_example|lib/material_fab_menu_demo.dart"}],"mainDemo":null,"benchmarks":null,"owners":null,"uxOwners":null,"relatedUrls":null,"showGeneratedDocs":true}]
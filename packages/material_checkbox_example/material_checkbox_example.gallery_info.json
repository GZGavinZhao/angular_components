[{"displayName":"Material Checkbox","group":null,"docs":[{"docType":"DocType.dartDocInfo","name":"MaterialCheckboxComponent","deprecated":false,"deprecatedMessage":null,"selector":"material-checkbox","exportAs":null,"path":"angular_components/lib/material_checkbox/material_checkbox.dart","comment":"<p><code>material-checkbox</code> is a button that can be either checked or unchecked.</p>\n<p>User can tap the checkbox to check or uncheck it.  Usually you use\ncheckboxes to allow user to select multiple options from a set.  If you\nhave a single ON/OFF option, avoid using a single checkbox and use\n<code>material-toggle</code> instead.</p>\n<p>We are not extending ButtonDecorator because we need to override several\nattributes, including role, tabindex, but most importantly because checkbox\nshould only be interactible with SPACE, while button is for both SPACE and\nENTER.</p>\n<p><strong>Attributes:</strong></p>\n<ul>\n<li><code>no-ink</code> -- set this attribute to disable the ripple effect on the chip.</li>\n</ul>\n","inputs":[{"annotation":"Input","name":"checked","bindingAlias":null,"type":"bool","comment":"<p>Current state of the checkbox. This is user set-able state, via\n<code>toggleChecked()</code>, so when checked, the <code>indeterminate</code> state gets\ncleared.</p>\n<p><code>true</code> is CHECKED and <code>false</code> is not.</p>\n","classPath":"angular_components/lib/material_checkbox/material_checkbox.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"disabled","bindingAlias":null,"type":"bool","comment":"<p>Whether the checkbox should not respond to events, and have a style that\nsuggests that interaction is not allowed.</p>\n","classPath":"angular_components/lib/material_checkbox/material_checkbox.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"indeterminate","bindingAlias":null,"type":"bool","comment":"<p>Alternative state of the checkbox, not user set-able state. Between\n<code>checked</code> and <code>indeterminate</code>, only one can be true, though both can be\nfalse.</p>\n<p><code>true</code> is INDETERMINATE and <code>false</code> is not.</p>\n","classPath":"angular_components/lib/material_checkbox/material_checkbox.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"indeterminateToChecked","bindingAlias":null,"type":"bool","comment":"<p>Determines the state to go into when <code>indeterminate</code> state is toggled.</p>\n<p><code>true</code> will go to checked and <code>false</code> will go to unchecked.</p>\n","classPath":"angular_components/lib/material_checkbox/material_checkbox.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"label","bindingAlias":null,"type":"String","comment":"<p>Label for the checkbox, alternatively use content.</p>\n","classPath":"angular_components/lib/material_checkbox/material_checkbox.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"readOnly","bindingAlias":null,"type":"bool","comment":"<p>Whether the checkbox can be changed by user interaction.</p>\n","classPath":"angular_components/lib/material_checkbox/material_checkbox.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"themeColor","bindingAlias":null,"type":"String","comment":"<p>Color of the checkbox and ripple when checked.</p>\n<p>Example: '#FF00FF'. By default it is $mat-blue-500. Note that the\nthemeColor is applied to the checkbox even when the box is unchecked,\nwhich deviates from the standard material spec. Use mixin to set\nthemeColor unless you want this behavior.</p>\n","classPath":"angular_components/lib/material_checkbox/material_checkbox.dart","deprecated":false,"deprecatedMessage":null}],"outputs":[{"annotation":"Output","name":"onChange","bindingAlias":"change","type":"Stream<String>","comment":"<p>Fired when checkbox state changes, sends <code>checkedStr</code>, i.e. ARIA state.</p>\n","classPath":"angular_components/lib/material_checkbox/material_checkbox.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Output","name":"onChecked","bindingAlias":"checkedChange","type":"Stream<bool>","comment":"<p>Fired when checkbox is checked or unchecked, but not when set\nindeterminate. Sends the state of <code>checked</code>.</p>\n","classPath":"angular_components/lib/material_checkbox/material_checkbox.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Output","name":"onIndeterminate","bindingAlias":"indeterminateChange","type":"Stream<bool>","comment":"<p>Fired when checkbox goes in and out of indeterminate state, but not when\nset to checked.</p>\n<p>Sends the state of <code>indeterminate</code>.</p>\n","classPath":"angular_components/lib/material_checkbox/material_checkbox.dart","deprecated":false,"deprecatedMessage":null}]}],"demos":[{"type":"MaterialCheckboxExample","name":"MaterialCheckboxExample","selector":"material-checkbox-example","asset":"material_checkbox_example|lib/material_checkbox_example.dart"}],"mainDemo":null,"benchmarks":null,"owners":null,"uxOwners":null,"relatedUrls":null,"showGeneratedDocs":true}]